{"version":3,"file":"listagemSuporte/listagemSuporte.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,mCAAmC;AACvH,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,+BAA+B,YAAY;AAC3C,mCAAmC,gBAAgB;AACnD;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA","sources":["webpack://@fullcalendar-examples/webpack/./src/ListagemSuporte/index.js"],"sourcesContent":["// Função para salvar os dados de suporte no local storage.\r\nfunction setLocalStorageSupport(minhaLista) {\r\n  return localStorage.setItem(\"minhaLista\", JSON.stringify(minhaLista));\r\n}\r\n\r\n// Função para recuperar os dados de suporte do local storage.\r\nfunction getLocalStorageSupport() {\r\n  return JSON.parse(localStorage.getItem(\"minhaLista\")) ?? [];\r\n}\r\n\r\n// Função para identificar o cliente quando uma linha da tabela é clicada.\r\nfunction identifyingCustomer(event) {\r\n  const row = event.currentTarget; // A linha (tr) que foi clicada.\r\n  const id = row.getAttribute(\"data-id\"); // Obtém o ID da linha.\r\n  console.log(\"Este é o cliente de ID\", id);\r\n\r\n  // Obter os dados do cliente do localStorage usando o ID.\r\n  const minhaLista = getLocalStorageSupport();\r\n  const clientData = minhaLista.find((client) => client.id === parseInt(id));\r\n  // Verificar se os dados do cliente existem.\r\n  if (clientData) {\r\n      // Serializar os dados do cliente como uma string JSON.\r\n      const serializedData = JSON.stringify(clientData);\r\n      // Redirecionar para a página de edição com os dados do cliente como parâmetros de consulta.\r\n      window.location.href = `/codigo-fonte/src/TratamentoSuporte/index.html?data=${encodeURIComponent(serializedData)}`;\r\n  } else {\r\n      console.log(\"Não foram encontrados dados para o ID\", id);\r\n  }\r\n}\r\n\r\n// Função para preencher os campos do formulário com os dados do cliente.\r\nfunction fillFields(client) {\r\n  document.getElementsByName(\"nome\")[id].value = client.nome;\r\n  document.getElementsByName(\"email\")[id].value = client.email;\r\n  document.getElementsByName(\"telefone\")[id].value = client.telefone;\r\n  document.getElementsByName(\"mensagem\")[id].value = client.mensagem;\r\n}\r\n\r\n// Função para criar uma nova linha na tabela para um cliente.\r\nfunction createRow(client) {\r\n  const newRow = document.createElement(\"tr\");\r\n  newRow.setAttribute(\"data-id\", client.id); // Adiciona um atributo de dados com o ID.\r\n  newRow.innerHTML = `\r\n      <td class=\"td td-nome\">${client.nome}</td>\r\n      <td class=\"td td-mensagem\">${client.mensagem}</td>\r\n      `;\r\n  document.querySelector(\"#tableClient>tbody\").appendChild(newRow);\r\n  newRow.addEventListener(\"click\", identifyingCustomer); // Adiciona o event listener à nova linha.\r\n}\r\n\r\n// Função para limpar todas as linhas da tabela.\r\nfunction clearTable() {\r\n  const tbody = document.querySelector(\"#tableClient>tbody\");\r\n  tbody.innerHTML = \"\"; // Limpa o conteúdo da tabela.\r\n}\r\n\r\n// Função para atualizar a tabela com os dados de suporte do local storage.\r\nfunction updateTable(filteredData = null) {\r\n  const minhaLista = filteredData || readSupport();\r\n  clearTable();\r\n  minhaLista.forEach(createRow);\r\n}\r\n\r\n// CRUD: Lê os dados de suporte do local storage.\r\nfunction readSupport() {\r\n  return getLocalStorageSupport();\r\n}\r\n\r\n// Função de pesquisa\r\nfunction searchMessages() {\r\n  const input = document.getElementById('searchBarList');\r\n  const filter = input.value.toUpperCase();\r\n  const minhaLista = readSupport();\r\n  \r\n  const filteredData = minhaLista.filter(client => {\r\n    return client.nome.toUpperCase().includes(filter) || client.mensagem.toUpperCase().includes(filter);\r\n  });\r\n  \r\n  updateTable(filteredData);\r\n}\r\n\r\nvar openSlide = document.querySelector(\"#ativar\");\r\n\r\nopenSlide.addEventListener(\"click\", function (event) {\r\n  event.stopPropagation(); // Impede que o clique se propague para o documento\r\n  var slide = document.querySelector(\"#slide\");\r\n\r\n  if (slide.style.display === \"block\") {\r\n    slide.classList.remove(\"animate__fadeInLeft\");\r\n    slide.classList.add(\"animate__fadeOutLeft\");\r\n\r\n    slide.addEventListener(\"animationend\", function handleAnimationEnd() {\r\n      slide.style.display = \"none\";\r\n      slide.classList.remove(\"animate__fadeOutLeft\");\r\n      slide.removeEventListener(\"animationend\", handleAnimationEnd);\r\n    });\r\n  } else {\r\n    slide.style.display = \"block\";\r\n    slide.classList.add(\"animate__fadeInLeft\");\r\n    slide.classList.remove(\"animate__fadeOutLeft\");\r\n\r\n    slide.addEventListener(\"animationend\", function handleAnimationEnd() {\r\n      slide.classList.remove(\"animate__fadeInLeft\");\r\n      slide.removeEventListener(\"animationend\", handleAnimationEnd);\r\n    });\r\n  }\r\n});\r\n\r\n// Evento de clique no documento para fechar a barra lateral quando clicar fora dela\r\ndocument.addEventListener(\"click\", function (event) {\r\n  var slide = document.querySelector(\"#slide\");\r\n\r\n  // Verifica se o clique foi fora da barra lateral e do botão de ativação\r\n  if (\r\n    !slide.contains(event.target) &&\r\n    !openSlide.contains(event.target) &&\r\n    slide.style.display === \"block\"\r\n  ) {\r\n    slide.classList.remove(\"animate__fadeInLeft\");\r\n    slide.classList.add(\"animate__fadeOutLeft\");\r\n\r\n    slide.addEventListener(\"animationend\", function handleAnimationEnd() {\r\n      slide.style.display = \"none\";\r\n      slide.classList.remove(\"animate__fadeOutLeft\");\r\n      slide.removeEventListener(\"animationend\", handleAnimationEnd);\r\n    });\r\n  }\r\n});\r\n\r\n// Atualiza a tabela quando a página é carregada.\r\nupdateTable();\r\n"],"names":[],"sourceRoot":""}